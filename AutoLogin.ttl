;;-------------------------------------------------------------------------------------------------
;; カスタム設定 (ファイル/フォルダのパスは絶対パスか、TTLファイルからの相対パス表記で指定)
;;-------------------------------------------------------------------------------------------------
;; ホストリストファイル名 (必須)
HOST_FILE              = "Sample\hosts.list"

;; ログフォルダのパス
;; ※フォルダが無い場合は自動的に作成する
;; ※ログを保存しない場合は空白 '' を設定する
LOG_DIR_PATH           = "logs"

;; ログファイル名の指定 (strftime形式の書式が使用可能)
;; 接続ホスト名は $HOSTNAME を指定すると置換される作り
LOG_FILENAME           = '$HOSTNAME_&h_%Y%m%d-%H%M%S.log'

;; カスタムINIファイルが格納されているフォルダのパス
INI_DIR_PATH           =  "%PROGRAMFILES%\teraterm"

;; デフォルトINIファイルのパス
;; ※ ホストリストファイルでカスタムINIファイルの指定がない場合か、該当のINIファイルが見つからない場合に読み込む
DEFAULT_INI            = "%PROGRAMFILES%\teraterm\TERATERM.INI"

;; パスワードファイルの格納パス
PASSWDFILE_DIR_PATH    = "passwdfile"

;; SSH鍵の格納パス
SSHKEY_DIR_PATH        = "SSH_KEY"

;; デフォルトのコマンドリストファイル名
;; ※ 使わない場合はブランク '' を設定する
;; ※ コマンドライン引数の値が優先される
COMMAND_FILE           = "Sample\command.list"

;; SSHログインユーザのデフォルト
;; ※ ホストリストファイルでSSHログインユーザ名の指定がない場合にこのアカウントを使用してログインを試みる
DEFAULT_SSH_USER       = "root"

;; Tera Term 端末画面の表示位置 ※on/offで指定
;; 横: DISPLAY_POSITION_X / 縦: DISPLAY_POSITION_Y
ADJUST_DISPLAY_POSITION = 'off'
DISPLAY_POSITION_X     = "0"
DISPLAY_POSITION_Y     = "0"

;;-------------------------------------------------------------------------------------------------
;; ディレクトリ情報の定義
;;-------------------------------------------------------------------------------------------------
;; カレントディレクトリを取得する
getdir WORKDIR

;; ホストリストファイルの絶対パスを取得する (相対パスの場合)
expandenv HOST_FILE
strscan HOST_FILE '\'
UNCPATH_CHK = result
strscan HOST_FILE ':'
if (result <> 2) & (UNCPATH_CHK <> 1) then
    makepath HOST_FILE WORKDIR HOST_FILE
endif

;; ログディレクトリの絶対パスを取得する (相対パスの場合)
expandenv LOG_DIR_PATH
strscan LOG_DIR_PATH '\'
UNCPATH_CHK = result
strcompare LOG_DIR_PATH ''
LOG_DIR_CHKBLANK = result
strscan LOG_DIR_PATH ':'
if (result <> 2) & (UNCPATH_CHK <> 1) & (LOG_DIR_CHKBLANK <> 0) then
    makepath LOG_DIR_PATH WORKDIR LOG_DIR_PATH
endif

;; INIファイルディレクトリの絶対パスを取得する (相対パスの場合)
expandenv INI_DIR_PATH
strscan INI_DIR_PATH '\'
UNCPATH_CHK = result
strscan INI_DIR_PATH ':'
if (result <> 2) & (UNCPATH_CHK <> 1) then
    makepath INI_DIR_PATH WORKDIR INI_DIR_PATH
endif

;; パスワードファイルディレクトリの絶対パスを取得する (相対パスの場合)
expandenv PASSWDFILE_DIR_PATH
strscan PASSWDFILE_DIR_PATH '\'
UNCPATH_CHK = result
strscan PASSWDFILE_DIR_PATH ':'
if (result <> 2) & (UNCPATH_CHK <> 1) then
    makepath PASSWDFILE_DIR_PATH WORKDIR PASSWDFILE_DIR_PATH
endif

;;-------------------------------------------------------------------------------------------------
;; ホスト選択画面を作成する
;;-------------------------------------------------------------------------------------------------
getfileattr HOST_FILE
if result < 0 then
    messagebox 'ホストリストファイルが見つかりません。' 'エラー'
    end
endif

;; ホストファイルの行数を取得する
fileopen HOST_LIST HOST_FILE 0
i = 0
while
   filereadln HOST_LIST LIST_LINE

   ;; ファイル読み込みの終了処理
   if result = 1 break

   ;; 空白行を無視する
   strlen LIST_LINE
   if result = 0 continue

   ;; 「#」から始まる行をコメントとして無視
   strmatch LIST_LINE '^#'
   if result <> 0 continue

   ;;配列の要素数を計測する
   strsplit LIST_LINE ','
   if paramcnt >= 3 then
       strcompare params[3] ''
       PARAMS3_CHKBLANK = result
       strcompare params[3] groupmatchstr9
       if (result = 0) | (PARAMS3_CHKBLANK = 0) then
           i = i + 1
       endif
   else
       i = i + 1
   endif
endwhile
fileclose HOST_LIST

if i = 0 then
    sprintf2 ERRORMSG '%s' 'ホスト選択画面を表示することができません。\n次の理由でホスト選択画面の表示に失敗することがあります。\n\n  ・ホストリストファイルの記述が空。\n  ・ホストリストファイルが排他制御されている。\n  ・コマンドラインで指定したグループに一致するホストが存在しない。'
    strspecial ERRORMSG
    messagebox ERRORMSG 'エラー'
    end
endif

;; 配列を作成
strdim HOST_NAME i
strdim HOST_IP i
strdim HOST_INI i
strdim HOST_PROTOCOL i
strdim HOST_PORT i
strdim HOST_LOGIN_USER i
strdim SSH_AUTHENTICATION_TYPE i
strdim SSH_PRIVATEKEY_PATH i

;; ホストに関する情報をホストファイルから取得する
fileopen HOST_LIST HOST_FILE 0
i = 0
while
   filereadln HOST_LIST LIST_LINE

   ;; ファイル読み込みの終了処理
   if result = 1 break

   ;; 空白行を無視する
   strlen LIST_LINE
   if result = 0 continue

   ;; 「#」から始まる行をコメントとして無視
   strmatch LIST_LINE '^#'
   if result <> 0 continue

   ;;ホストに関する情報を各変数へ代入する
   strsplit LIST_LINE ','
   if paramcnt >= 3 then
       strcompare params[3] groupmatchstr9
       if (result = 0) | (PARAMS3_CHKBLANK = 0) then
           goto label_0
       endif
   else
       :label_0
       HOST_NAME[i]                  = groupmatchstr1
       HOST_IP[i]                    = groupmatchstr2
       HOST_INI[i]                   = groupmatchstr3
       HOST_PROTOCOL[i]              = groupmatchstr4
       HOST_PORT[i]                  = groupmatchstr5
       HOST_LOGIN_USER[i]            = groupmatchstr6
       SSH_AUTHENTICATION_TYPE[i]    = groupmatchstr7
       SSH_PRIVATEKEY_PATH[i]        = groupmatchstr8
       i = i + 1
   endif
endwhile
fileclose HOST_LIST

;; ホスト選択画面を表示させる
if paramcnt >= 3 then
    if PARAMS3_CHKBLANK <> 0 then
        sprintf2  STR '【%s】%s' params[3] 'ホスト選択'
        listbox 'ログインするホストを選択してください' STR HOST_NAME
    else
        listbox 'ログインするホストを選択してください' 'ホスト選択' HOST_NAME
    endif
else
    listbox 'ログインするホストを選択してください' 'ホスト選択' HOST_NAME
endif

;;-------------------------------------------------------------------------------------------------
;; 選択されたホストにログインを行う
;;-------------------------------------------------------------------------------------------------
;; ホスト選択画面で選択されたホストの情報を変数に代入する
if result >= 0 then
    CONNECT_NAME                    = HOST_NAME[result]
    CONNECT_IP                      = HOST_IP[result]
    CONNECT_INI                     = HOST_INI[result]
    CONNECT_PROTOCOL                = HOST_PROTOCOL[result]
    CONNECT_PORT                    = HOST_PORT[result]
    CONNECT_LOGIN_USER              = HOST_LOGIN_USER[result]
    CONNECT_SSH_AUTHENTICATION_TYPE = SSH_AUTHENTICATION_TYPE[result]
    CONNECT_SSH_PRIVATEKEY_PATH     = SSH_PRIVATEKEY_PATH[result]
else
    end
endif

;; ホスト画面で選択されたホストのSSHログインユーザー設定をチェックし、値が空の場合はデフォルトのSSHログインユーザに設定する。
strcompare CONNECT_LOGIN_USER ''
if result = 0 then
    CONNECT_LOGIN_USER = DEFAULT_SSH_USER
endif

;; 選択されたホストのSSHログインユーザの指定がない場合、強制終了
strcompare CONNECT_LOGIN_USER ''
if result = 0 then
    sprintf2 ERRORMSG '%s\n\n%s  %s' '選択されたホストのSSHログインユーザが指定されていません。' '選択されたホスト：' CONNECT_NAME
    strspecial ERRORMSG
    messagebox ERRORMSG 'エラー'
    end
endif

;; カスタムINIファイルのパス結合
makepath INI_FILE_PATH INI_DIR_PATH CONNECT_INI

;; カスタムINIファイルの存在チェック (無い場合はデフォルトINIに読み込み対象を差し替える)
getfileattr INI_FILE_PATH
if (result < 0) then
    ;; デフォルトINIファイルの絶対パスを取得する (相対パスの場合)
    expandenv DEFAULT_INI
    strscan DEFAULT_INI '\'
    UNCPATH_CHK = result
    strscan DEFAULT_INI ':'
    if (result <> 2) & (UNCPATH_CHK <> 1) then
        makepath DEFAULT_INI WORKDIR DEFAULT_INI
    endif
    INI_FILE_PATH = DEFAULT_INI
endif

;; INIファイルが見つからない場合、警告を表示
getfileattr INI_FILE_PATH
if result < 0 then
    messagebox 'INIファイルが見つかりません。' '警告'
endif

;; パスワード取得
sprintf2 PASSFILE '%s_%s.dat' CONNECT_NAME CONNECT_IP
makepath PASSFILE PASSWDFILE_DIR_PATH PASSFILE
foldercreate PASSWDFILE_DIR_PATH
getpassword PASSFILE CONNECT_LOGIN_USER PASSWORD

;; Telnet、またはSSH接続コマンドを作成する
strmatch CONNECT_PROTOCOL "(?i:ssh)"
if (result > 0) then
	strreplace PASSWORD 1 '"' '""'
	strmatch CONNECT_SSH_AUTHENTICATION_TYPE "(?i:publickey)"
	if (result > 0) then
		strscan CONNECT_SSH_PRIVATEKEY_PATH '\'
		UNCPATH_CHK = result
		strscan CONNECT_SSH_PRIVATEKEY_PATH ':'
		if (result <> 2) & (UNCPATH_CHK <> 1) then
			expandenv SSHKEY_DIR_PATH
			makepath CONNECT_SSH_PRIVATEKEY_PATH SSHKEY_DIR_PATH CONNECT_SSH_PRIVATEKEY_PATH
			strscan CONNECT_SSH_PRIVATEKEY_PATH '\'
			UNCPATH_CHK = result
			strscan CONNECT_SSH_PRIVATEKEY_PATH ':'
			if (result <> 2) & (UNCPATH_CHK <> 1) then
				makepath CONNECT_SSH_PRIVATEKEY_PATH WORKDIR CONNECT_SSH_PRIVATEKEY_PATH
			endif
		endif
		sprintf2 COMMAND '%s:%s %s%s%s %s%s %s%s%s%s%s' CONNECT_IP CONNECT_PORT '/F="' INI_FILE_PATH '" /ssh /2 /auth=publickey' '/user=' CONNECT_LOGIN_USER '/passwd="' PASSWORD '" /keyfile="' CONNECT_SSH_PRIVATEKEY_PATH '"'
	else
		strmatch CONNECT_SSH_AUTHENTICATION_TYPE "(?i:challengeresponse)"
		if (result > 0) then
			sprintf2 COMMAND '%s:%s %s%s %s%s %s%s%s%s%s' CONNECT_IP CONNECT_PORT '/ssh /2 /auth=' "challenge" '/user=' CONNECT_LOGIN_USER '/passwd="' PASSWORD '" /F="' INI_FILE_PATH '"'
		else
			sprintf2 COMMAND '%s:%s %s%s %s%s %s%s%s%s%s' CONNECT_IP CONNECT_PORT '/ssh /2 /auth=' "password" '/user=' CONNECT_LOGIN_USER '/passwd="' PASSWORD '" /F="' INI_FILE_PATH '"'
		endif
	endif
else
	sprintf2 COMMAND '%s:%s %s%s%s' CONNECT_IP CONNECT_PORT '/F="' INI_FILE_PATH '" /nossh /T=1'
endif

;; Telnet、またはSSH接続を行う
connect COMMAND

; 接続出来ない場合はメッセージを表示し終了
if result <> 2 then
    messagebox '接続できませんでした。' '接続エラー'
    end
endif

;; (Telnetの場合)自動ログイン処理
strmatch CONNECT_PROTOCOL "(?i:telnet)"
if (result > 0) then
    wait '$' '#' ']' '>' ':'
    sendln CONNECT_LOGIN_USER
    recvln
    sendln PASSWORD
endif

;; Tera Term 端末画面の表示位置を調節する
strcompare ADJUST_DISPLAY_POSITION 'on'
if result = 0 then 
    str2int X DISPLAY_POSITION_X
    str2int Y DISPLAY_POSITION_Y
    sprintf #$1b"[3;%d;%dt" X Y
    dispstr inputstr
endif

;;-------------------------------------------------------------------------------------------------
;; ログの記録を開始する
;;-------------------------------------------------------------------------------------------------
if LOG_DIR_CHKBLANK = 1 then

    ;; ログフォーマットに準じて日付や時刻情報などを取得し、ログ名を生成する
    gettime LOG_FORMAT LOG_FILENAME
    sprintf2 LOG_NAME '%s' LOG_FORMAT
    strreplace LOG_NAME 1 '\$HOSTNAME' CONNECT_NAME

    ;; ログを出力するフォルダを作成する
    foldercreate LOG_DIR_PATH
    getdate datestr "%Y%m%d"
	makepath LOG_DIR_PATH LOG_DIR_PATH datestr
	foldercreate LOG_DIR_PATH
    
    ;; 自動ログ取得設定が有効で既にログが記録中の場合、ログの記録を停止する
    logclose

    ;; ログの記録を開始する
    makepath LOG_PATH LOG_DIR_PATH LOG_NAME
    logopen LOG_PATH 0 1 1 0
    if result = 1 then
        sprintf2 MSG 'Tera Term のログファイル書き込みに失敗しました。\n設定を確認してください。'
        strspecial MSG
        messagebox MSG 'エラー'
    endif
endif

;;-------------------------------------------------------------------------------------------------
;; コマンドリストの内容を実行
;;-------------------------------------------------------------------------------------------------
;; コマンドラインの引数でコマンドリストが指定されている場合、値を上書きする
if paramcnt >= 2 then
    strcompare params[2] ''
    if result <> 0 then
        strscan params[2] '\'
        UNCPATH_CHK = result
        strscan params[2] ':'
        if ((result = 2) | (UNCPATH_CHK = 1)) then
            COMMAND_FILE = params[2]
        else
            makepath COMMAND_FILE WORKDIR params[2]
        endif
    endif
endif

;;コマンドリストファイルが何も指定されていない場合、スキップする
strcompare COMMAND_FILE ''
if (result <> 0) then
    ;;絶対パスを取得する (相対パスの場合)
    expandenv COMMAND_FILE
    strscan COMMAND_FILE '\'
    UNCPATH_CHK = result
    strscan COMMAND_FILE ':'
    if (result <> 2) & (UNCPATH_CHK <> 1) then
        makepath COMMAND_FILE WORKDIR COMMAND_FILE
    endif

    ;; コマンドリストファイルが無い場合、エラー
    getfileattr COMMAND_FILE
    if (result < 0) then
        messagebox 'コマンドリストファイルが開けません。' 'エラー'
        end
    endif
    
    fileopen COMMAND_LIST COMMAND_FILE 0

    ;; 同期モードに設定
    setsync 1

    while 1
        ;; コマンドリストを一行ずつ読み取る
        filereadln COMMAND_LIST COMMAND_LIST_LINE
        if result = 1 break

        ;; 空白行を無視する
        strlen COMMAND_LIST_LINE
        if result = 0 continue

        ;; 「#」から始まる行をコメントとして無視
        strmatch COMMAND_LIST_LINE '^#'
        if result <> 0 continue

        ;; 一行ずつコマンドを実行
        flushrecv
        sendln COMMAND_LIST_LINE
        recvln
        wait '$' '#' ']' '>'
    endwhile
    fileclose COMMAND_LIST

    ;; 非同期モードに戻す
    setsync 0
endif

;;-------------------------------------------------------------------------------------------------
;; 終了
;;-------------------------------------------------------------------------------------------------
;; マクロ終了
end
